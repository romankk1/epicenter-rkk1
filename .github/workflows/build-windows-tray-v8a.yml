name: Build Windows Tray v8a

on:
  workflow_dispatch:

jobs:
  prep:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Clone upstream epicenter (latest main)
        run: |
          git clone https://github.com/epicenter-md/epicenter.git epicenter-up
          cd epicenter-up
          git fetch --all --prune
          git checkout origin/main -B tray-build

      - name: Add tray feature remote & fetch
        run: |
          cd epicenter-up
          git remote add tray https://github.com/vishesh-sachan/epicenter.git
          git fetch tray feature/minimize-to-tray

      - name: Merge tray feature (prefer tray)
        run: |
          cd epicenter-up
          git config user.name "tray-bot"
          git config user.email "tray-bot@users.noreply.github.com"
          git merge --no-edit -X theirs tray/feature/minimize-to-tray || true
          git add -A || true
          git commit -m "Temp merge: upstream main + tray feature for build" || true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable

      - name: Install WiX Toolset
        shell: pwsh
        run: |
          choco install wixtoolset --yes --no-progress || $true

      - name: Install NSIS
        shell: pwsh
        run: |
          choco install nsis --yes --no-progress

      - name: Cache Bun
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('epicenter-up/**/bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install deps
        working-directory: epicenter-up
        run: bun install

      - name: Pre-patch for CI (span + check-ffmpeg)
        working-directory: epicenter-up/apps/whispering
        run: |
          F="src/routes/(config)/settings/transcription/+page.svelte"
          if [ -f "$F" ]; then
            perl -0777 -pe 's/<span([^>]*)\/>/<span$1><\/span>/g' -i "$F"
          fi
          T="src/routes/+layout/check-ffmpeg.ts"
          if [ ! -f "$T" ]; then
            mkdir -p "src/routes/+layout"
            cat > "$T" <<'TS'
export type FfmpegCheck = { available: boolean; version?: string; error?: string };
export async function checkFfmpeg(): Promise<FfmpegCheck> { return { available: true, version: "CI" }; }
export default checkFfmpeg;
TS
          fi

      - name: Done
        run: echo "deps & pre-patch ok âœ…"
