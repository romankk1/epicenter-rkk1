name: Build Whispering (Windows) with Tray (no-merge, no-conflicts) — v6

on:
  workflow_dispatch:

jobs:
  build-tray-windows:
    runs-on: windows-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout (placeholder)
        uses: actions/checkout@v4

      - name: Clone upstream epicenter (latest main)
        run: |
          git clone https://github.com/epicenter-md/epicenter.git epicenter-up
          cd epicenter-up
          git fetch --all --prune
          git checkout origin/main -B tray-build

      - name: Add tray feature remote & fetch
        run: |
          cd epicenter-up
          git remote add tray https://github.com/vishesh-sachan/epicenter.git
          git fetch tray feature/minimize-to-tray

      - name: Merge tray feature preferring tray on conflicts
        run: |
          cd epicenter-up
          git config user.name "tray-bot"
          git config user.email "tray-bot@users.noreply.github.com"
          # Preferisci SEMPRE le modifiche della tray in caso di conflitti
          git merge --no-edit -X theirs tray/feature/minimize-to-tray || true
          git add -A || true
          git commit -m "Temp merge: upstream main + tray feature for build" || true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable

      # ✅ WiX per MSI (rilevamento dinamico del path di candle.exe)
      - name: Install WiX Toolset (for MSI)
        shell: pwsh
        run: |
          choco install wixtoolset --yes --no-progress || $true
          # Prova a trovare candle.exe già nel PATH
          $candle = (Get-Command candle.exe -ErrorAction SilentlyContinue)?.Source
          if (-not $candle) {
            # Cerca nelle possibili cartelle (es. v3.11, v3.14, ecc.)
            $guess = Get-ChildItem "C:\Program Files (x86)" -Filter "WiX Toolset v3.*" -Directory -ErrorAction SilentlyContinue |
                     ForEach-Object { Join-Path $_.FullName "bin\candle.exe" } |
                     Where-Object { Test-Path $_ } |
                     Select-Object -First 1
            if ($guess) {
              $env:Path = "$env:Path;$(Split-Path $guess)"
              $candle = $guess
            }
          }
          if (-not $candle) {
            Write-Error "WiX (candle.exe) non trovato dopo installazione."
            exit 1
          }
          & $candle -? | Out-Null
          Write-Host "WiX trovato in: $(Split-Path $candle)"

      # ✅ NSIS per EXE (gestione doppio path comune)
      - name: Install NSIS (for EXE)
        shell: pwsh
        run: |
          choco install nsis --yes --no-progress
          $nsis1='C:\Program Files (x86)\NSIS\makensis.exe'
          $nsis2='C:\Program Files\NSIS\makensis.exe'
          if (Test-Path $nsis1) {
            & $nsis1 -VERSION
            $env:Path = "$env:Path;$(Split-Path $nsis1)"
          } elseif (Test-Path $nsis2) {
            & $nsis2 -VERSION
            $env:Path = "$env:Path;$(Split-Path $nsis2)"
          } else {
            Write-Error "makensis.exe non trovato dopo Chocolatey."
            exit 1
          }

      - name: Cache Bun
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('epicenter-up/**/bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install deps (monorepo)
        working-directory: epicenter-up
        run: bun install

      - name: Install Tauri CLI (global)
        run: |
          bun add -g @tauri-apps/cli@latest
          bun --version
          tauri -V || true

      - name: Build Whispering (Windows + Tray)
        working-directory: epicenter-up/apps/whispering
        env:
          CI: "true"
        run: |
          echo "PATH=$PATH"
          which bun || true
          which tauri || true
          # 1º tentativo: usa CLI globale installata con bun
          bun tauri build || \
          # 2º tentativo (fallback): invoca via bunx
          bunx --bun tauri build

      - name: Upload Windows installer
        uses: actions/upload-artifact@v4
        with:
          name: whispering-windows-with-tray
          path: |
            epicenter-up/apps/whispering/src-tauri/target/release/bundle/**/*.msi
            epicenter-up/apps/whispering/src-tauri/target/release/bundle/**/*.exe
            epicenter-up/apps/whispering/src-tauri/target/release/bundle/**/*.zip
