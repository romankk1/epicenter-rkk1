name: Build Windows Tray v16b (Vulkan via winget, robust)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    env:
      NODE_ENV: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Tauri CLI (global)
        run: |
          bun add -g @tauri-apps/cli
          tauri -V

      - name: Install Vulkan SDK (LunarG) via winget
        run: |
          winget source update
          winget install --id LunarG.VulkanSDK --accept-package-agreements --accept-source-agreements --silent

          $root = "C:\VulkanSDK"
          if (!(Test-Path $root)) { throw "VulkanSDK root non trovato in $root" }
          $dirs = Get-ChildItem $root -Directory | Sort-Object Name -Descending
          if ($dirs.Count -eq 0) { throw "Nessuna versione VulkanSDK trovata in $root" }
          $sdk = $dirs[0].FullName

          "VULKAN_SDK=$sdk" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          "VK_SDK_PATH=$sdk" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
          "PATH=$($sdk)\Bin;$Env:PATH" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

          Write-Host "✅ Vulkan SDK installato in $sdk"

      - name: Add FFmpeg check shim (safe Base64 write)
        run: |
          $ffmpegPath = "apps/whispering/src/routes/(config)/+layout/check-ffmpeg.ts"
          $ffmpegDir  = Split-Path $ffmpegPath
          if (-not (Test-Path $ffmpegDir)) { New-Item -ItemType Directory -Force -Path $ffmpegDir | Out-Null }

          $b64 = @"
ZXhwb3J0IHR5cGUgRmZtcGVnQ2hlY2sgPSB7IGF2YWlsYWJsZTogYm9vbGVhbjsgdmVyc2lvbj86IHN0cmluZzsg
ZXJyb3I/OiBzdHJpbmcgfTsKCmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0ZmbXBlZygpOiBQcm9taXNlPEZm
bXBlZ0NoZWNrPiB7IHJldHVybiB7IGF2YWlsYWJsZTogdHJ1ZSwgdmVyc2lvbjogIkNJIiB9OyB9CgovLyBBbGN1
bmUgU1ZHMjIgY2hlIHN1bGwgU2V0dGluZ3MgdXRpbGl6YXRhIGluIG1vZGUKZXhwb3J0IGZ1bmN0aW9uIGhhc05h
dmlnYXRvckxvY2FsVHJhbnNjcmlwdGlvbklzc3VlKCk6IGJvb2xlYW4geyByZXR1cm4gZmFsc2U7IH0KCmV4cG9y
dCBkZWZhdWx0IGNoZWNrRmZtcGVnOwo=
"@
          $bytes = [Convert]::FromBase64String(($b64 -replace '\s',''))
          [IO.File]::WriteAllBytes($ffmpegPath, $bytes)
          Write-Host "✅ FFmpeg shim written at $ffmpegPath"

      - name: Install JS deps (root)
        run: |
          bun install --frozen-lockfile
          Write-Host "✅ Root deps installed"

      - name: Build Whispering (SSR only)
        working-directory: apps/whispering
        run: |
          bun run build
          Write-Host "✅ Whispering SSR built"

      - name: Build Tauri (Windows)
        working-directory: apps/whispering
        env:
          VULKAN_SDK: ${{ env.VULKAN_SDK }}
          VK_SDK_PATH: ${{ env.VK_SDK_PATH }}
          NODE_ENV: production
        run: |
          tauri build
          Write-Host "✅ Tauri build done"

      - name: Upload artifact (.exe)
        uses: actions/upload-artifact@v4
        with:
          name: whispering-windows-with-tray
          path: apps/whispering/src-tauri/target/release/*.exe
