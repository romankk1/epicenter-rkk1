name: Build Whispering (Windows) — CPU-only Tray

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-whispering-windows-tray:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Install WiX (for NSIS/MSI)
        run: |
          choco install wixtoolset --yes --no-progress
          if (-not (Test-Path "C:\Program Files (x86)\WiX Toolset v3.14\bin")) {
            throw "WiX non trovato dove previsto."
          }

      # ---- Patch anti-Vulkan: forziamo CPU-only in Cargo.toml ----
      - name: Force CPU-only (no Vulkan) in Cargo.toml
        working-directory: apps/whispering/src-tauri
        run: |
          $file = "Cargo.toml"
          if (-not (Test-Path $file)) { throw "Cargo.toml non trovato in src-tauri" }
          $text = Get-Content $file -Raw

          # Rimuovi features = ["vulkan"] e imposta default-features = false
          $text = $text -replace 'features\s*=\s*\[\s*"vulkan"\s*\]', 'default-features = false'

          # Forza whisper-rs / whisper-rs-sys senza default Vulkan
          $text = $text -replace '(^\s*whisper-rs\s*=\s*"\d+[^"]*"\s*$)', 'whisper-rs = { version = "0.11", default-features = false }'
          $text = $text -replace '(^\s*whisper-rs-sys\s*=\s*"\d+[^"]*"\s*$)', 'whisper-rs-sys = { version = "0.11.1", default-features = false }'
          $text = $text -replace 'whisper-rs\s*=\s*\{\s*version\s*=\s*"([^"]+)"\s*(,\s*features\s*=\s*\[[^\]]*\])?\s*\}', 'whisper-rs = { version = "$1", default-features = false }'
          $text = $text -replace 'whisper-rs-sys\s*=\s*\{\s*version\s*=\s*"([^"]+)"\s*(,\s*features\s*=\s*\[[^\]]*\])?\s*\}', 'whisper-rs-sys = { version = "$1", default-features = false }'

          Set-Content $file $text -Encoding UTF8
          Write-Host "✅ Cargo.toml forzato in CPU-only (nessun Vulkan)."

      # ---- Shim ffmpeg per evitare errori di import in CI ----
      - name: Add tiny ffmpeg shim (only if missing)
        working-directory: apps/whispering
        run: |
          $dir = "src/routes/(config)/+layout"
          New-Item -ItemType Directory -Force -Path $dir | Out-Null
          $ff = Join-Path $dir "check-ffmpeg.ts"
          if (-not (Test-Path $ff)) {
            $shim = @'
export async function hasNavigatorLocalTranscriptionIssue() {
  return false;
}
'@
            Set-Content $ff $shim -Encoding UTF8
            Write-Host "Created shim check-ffmpeg.ts"
          } else {
            Write-Host "Shim già presente."
          }

      - name: Bun install (workspace root)
        run: bun install --frozen-lockfile || bun install

      - name: Bun install (whispering app)
        working-directory: apps/whispering
        run: bun install --frozen-lockfile || bun install

      - name: Build Whispering UI (SSR build)
        working-directory: apps/whispering
        env:
          NODE_ENV: production
        run: bun run build

      - name: Build Tauri bundle (CPU-only)
        working-directory: apps/whispering
        env:
          RUSTFLAGS: "-C target-cpu=native"
        run: |
          bunx --bun @tauri-apps/cli@latest tauri build
          Write-Host "Done Tauri build"

      - name: Upload installer artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: whispering-windows-tray
          path: |
            apps/whispering/src-tauri/target/release/bundle/**/*.exe
            apps/whispering/src-tauri/target/release/bundle/**/*.msi
            apps/whispering/src-tauri/target/release/bundle/**/*.zip
            apps/whispering/src-tauri/target/release/**/*.exe
            apps/whispering/src-tauri/target/release/**/*.msi
          if-no-files-found: warn
