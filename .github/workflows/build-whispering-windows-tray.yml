name: Build Whispering (Windows) ‚Äî CPU-only Tray
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-whispering-windows-tray:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Node (for npx)
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Install WiX (for MSI)
        run: |
          choco install wixtoolset --yes --no-progress

      # üß© Patch whisper-rs-sys to disable Vulkan linking
      - name: Patch whisper-rs-sys build.rs (disable Vulkan)
        run: |
          $pattern = "whisper-rs-sys-0.11.1"
          $path = Get-ChildItem "$env:USERPROFILE\.cargo\registry\src" -Recurse -Directory -ErrorAction SilentlyContinue | Where-Object { $_.Name -eq $pattern } | Select-Object -First 1
          if (-not $path) {
            Write-Host "Waiting for cargo registry to populate..."
            cargo fetch whisper-rs-sys
            $path = Get-ChildItem "$env:USERPROFILE\.cargo\registry\src" -Recurse -Directory -ErrorAction SilentlyContinue | Where-Object { $_.Name -eq $pattern } | Select-Object -First 1
          }
          if ($path) {
            $file = Join-Path $path.FullName "build.rs"
            (Get-Content $file) -replace 'cargo:rustc-link-lib=vulkan-1','// cargo:rustc-link-lib=vulkan-1 (disabled for CI)' | Set-Content $file -Encoding UTF8
            Write-Host "‚úÖ Vulkan link disabled in whisper-rs-sys build.rs"
          } else {
            Write-Host "‚ö†Ô∏è whisper-rs-sys not found yet; skipping patch"
          }

      - name: Force CPU-only (no Vulkan) in Cargo.toml
        working-directory: apps/whispering/src-tauri
        run: |
          $f="Cargo.toml"
          $t = Get-Content $f -Raw
          $t = $t -replace 'features\s*=\s*\[\s*"vulkan"\s*\]', 'default-features = false'
          $t = $t -replace '(^\s*whisper-rs\s*=\s*"\d+[^"]*"\s*$)', 'whisper-rs = { version = "0.11", default-features = false }'
          $t = $t -replace '(^\s*whisper-rs-sys\s*=\s*"\d+[^"]*"\s*$)', 'whisper-rs-sys = { version = "0.11.1", default-features = false }'
          Set-Content $f $t -Encoding UTF8
          Write-Host "‚úÖ Cargo.toml forced to CPU-only"

      - name: Add tiny ffmpeg shim (only if missing)
        working-directory: apps/whispering
        run: |
          $dir = "src/routes/(config)/+layout"
          New-Item -ItemType Directory -Force -Path $dir | Out-Null
          $ff = Join-Path $dir "check-ffmpeg.ts"
          if (-not (Test-Path $ff)) {
            $lines = @(
              'export async function hasNavigatorLocalTranscriptionIssue() {'
              '  // Shim per CI'
              '  return false;'
              '}'
            )
            Set-Content -Path $ff -Value $lines -Encoding UTF8
            Write-Host "Shim creato"
          }

      - name: Bun install (workspace)
        run: bun install --frozen-lockfile || bun install

      - name: Bun install (whispering app)
        working-directory: apps/whispering
        run: bun install --frozen-lockfile || bun install

      - name: Build Whispering UI (SSR)
        working-directory: apps/whispering
        env:
          NODE_ENV: production
        run: bun run build

      - name: Build Tauri bundle (CPU-only)
        working-directory: apps/whispering
        env:
          RUSTFLAGS: "-C target-cpu=native"
        run: |
          npx @tauri-apps/cli@latest build
          Write-Host "‚úÖ Done Tauri build"

      - name: Upload installer artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: whispering-windows-tray
          path: |
            apps/whispering/src-tauri/target/release/bundle/**/*.exe
            apps/whispering/src-tauri/target/release/bundle/**/*.msi
            apps/whispering/src-tauri/target/release/bundle/**/*.zip
          if-no-files-found: warn
